---
// src/components/Navbar.astro

import FlowerIcon from "./icons/FlowerShalomIcon.astro";

const navItems = [
  {
    title: "Inicio",
    label: "inicio",
    url: "/", 
  },
  {
    title: "Servicios",
    label: "servicios",
    url: "/servicios", // ¡CAMBIO: Vuelve a ser una ruta de página!
  },
  {
    title: "Sobre Nosotros",
    label: "sobre-nosotros",
    url: "/sobrenosotros", // ¡CAMBIO: Vuelve a ser una ruta de página!
  },
  {
    title: "Contacto",
    label: "contacto",
    url: "/contacto", // ¡CAMBIO: Vuelve a ser una ruta de página!
  },
];

const currentPath = Astro.url.pathname;
---

<header class="fixed top-0 left-0 w-full z-50">
  <nav
    class="flex px-4 py-3 text-sm font-medium
      text-ts-accent
      justify-between items-center w-full max-w-7xl mx-auto
      bg-ts-background/50
      backdrop-blur-md
      shadow-lg
      ring-1 ring-ts-background/10
      rounded-full mt-4
      transition-all duration-300 ease-in-out"
    aria-label="Menú principal"
  >
    {/* Contenedor del ícono y texto "T/S" */}
    <a
      href="/"
      class="text-2xl font-bold text-ts-primary flex-shrink-0 flex items-center space-x-2"
    >
      <FlowerIcon class="w-7 h-7 text-ts-primary" />
      <span class="sr-only md:not-sr-only">TS</span>
    </a>

    {/* Menú Desktop (oculto en móvil) */}
    <ul class="hidden md:flex md:space-x-6 text-base" >
      {
        navItems.map((link) => (
          <li>
            <a
              class={`relative block px-3 py-2 transition 
                     hover:text-ts-primary 
                     ${currentPath === link.url ? "text-ts-accent font-semibold" : "text-gray-700"}`}
              aria-label={link.label}
              href={link.url}
            >
              {link.title}
            </a>
          </li>
        ))
      }
    </ul>


    {/* Botón de Hamburguesa (visible solo en móvil) */}
    <button
      id="mobile-menu-button"
      class="md:hidden text-ts-accent focus:outline-none z-50 p-2"
    >
      <svg
        class="w-8 h-8"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M4 6h16M4 12h16M4 18h16"
          ></path>
        </svg>
    </button>
  </nav>

  {/* Overlay primero */}
  <div
    id="mobile-menu-overlay"
    class="fixed inset-0 bg-black opacity-0 pointer-events-none transition-opacity duration-300 ease-in-out z-40 md:hidden"
  >
 &#8203; {/* Carácter invisible para asegurar altura */}
  </div>

  {/* Panel después */}
  <div
    id="mobile-menu-panel"
    class="fixed top-0 right-0 h-full w-3/4 max-w-xs bg-ts-background-dark transform translate-x-full transition-transform duration-300 ease-in-out md:hidden z-50 p-6 shadow-xl flex flex-col pt-20"
  >
    <button
      id="mobile-menu-close-button"
      class="absolute top-4 right-4 text-white focus:outline-none p-2"
      aria-label="Cerrar menú"
    >
      <svg
        class="w-8 h-8"
        fill="none"
        stroke="currentColor"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M6 18L18 6M6 6l12 12"></path>
        </svg>
    </button>
    <div class="flex flex-col space-y-6">
      {
        navItems.map((link) => (
          <a
            href={link.url}
            class="text-white hover:text-ts-accent text-2xl font-semibold transition duration-200"
            class:list={{ "text-ts-accent": currentPath === link.url }}
          >
              {link.title}
          </a>
        ))
      }
    </div>
  </div>

</header>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const mobileMenuButton = document.getElementById("mobile-menu-button");
    const mobileMenuPanel = document.getElementById("mobile-menu-panel");
    const mobileMenuCloseButton = document.getElementById(
      "mobile-menu-close-button"
    );
    const mobileMenuOverlay = document.getElementById("mobile-menu-overlay");

    function openMobileMenu() {
      mobileMenuPanel.classList.remove("translate-x-full");
      mobileMenuPanel.classList.add("translate-x-0");
      mobileMenuOverlay.classList.remove("opacity-0", "pointer-events-none");
      mobileMenuOverlay.classList.add("opacity-60", "pointer-events-auto");
      document.body.style.overflow = "hidden"; // Evita el scroll del fondo
    }

    function closeMobileMenu() {
      mobileMenuPanel.classList.remove("translate-x-0");
      mobileMenuPanel.classList.add("translate-x-full");
      mobileMenuOverlay.classList.remove("opacity-60", "pointer-events-auto");
      mobileMenuOverlay.classList.add("opacity-0", "pointer-events-none");
      document.body.style.overflow = ""; // Restaura el scroll
    }

    mobileMenuButton.addEventListener("click", openMobileMenu);
    mobileMenuCloseButton.addEventListener("click", closeMobileMenu);
    mobileMenuOverlay.addEventListener("click", closeMobileMenu); 

    mobileMenuPanel.querySelectorAll("a").forEach((link) => {
      link.addEventListener("click", closeMobileMenu);
    }); 

    window.addEventListener("resize", () => {
      if (window.innerWidth >= 768) {
        closeMobileMenu(); 
      }
    }); 

    const navLinks = document.querySelectorAll("#mobile-menu-panel a"); 
    const desktopNavLinks = document.querySelectorAll("nav ul a"); 

    function updateActiveLinks() {
      const currentPathname = window.location.pathname;

      navLinks.forEach((link) => {
        if (link.getAttribute("href") === currentPathname) {
          link.classList.add("text-ts-accent"); 
          link.classList.remove("text-white");
        } else {
          link.classList.remove("text-ts-accent");
          link.classList.add("text-white");
        }
      });

      desktopNavLinks.forEach((link) => {
        if (link.getAttribute("href") === currentPathname) {
          link.classList.add("text-ts-accent", "font-semibold");
          link.classList.remove("text-gray-700");
        } else {
          link.classList.remove("text-ts-accent", "font-semibold");
          link.classList.add("text-gray-700");
        }
      });
    }
    updateActiveLinks();
    document.addEventListener("astro:after-swap", updateActiveLinks);
    // La línea window.addEventListener("hashchange", updateActiveLinks); ya no es necesaria aquí
  });
</script>